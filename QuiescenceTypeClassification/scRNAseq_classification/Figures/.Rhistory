upregulated_common <- upregulated_common[upregulated_common %in% GenePanel35]
downregulated_common <- downregulated_common[downregulated_common %in% GenePanel35]
quiescence_genes <- c(downregulated_common, upregulated_common)
expr.data <- expr.data[rownames(expr.data) %in% quiescence_genes,]
gene_lists <- list(upregulated_common, downregulated_common)
expr.data <- as.matrix(expr.data)
es.dif <- gsva(expr.data, gene_lists, method = "zscore", verbose = FALSE, parallel.sz=1)
es.dif <- t(es.dif)
es.dif <- data.frame(es.dif)
es.dif$Common_score <- es.dif$X1 - es.dif$X2
QS <- es.dif
QS$X1 <- NULL
QS$X2 <- NULL
QS$SampleID <- rownames(QS)
QS$Day <- sapply(QS$SampleID, function(x)
strsplit(x,"_")[[1]][1])
table(QS$Day)
setwd("~/Documents/GitHub/CancerDormancy/Prognosis_and_treatment_response_analysis/Results/")
save(QS, file = "GSE134839_QuiescenceScores_35GeneRefinedPanel.RData")
expr.data <- data.frame(expr.data)
######
#DAY0
######
D0_samples <- QS[QS$Day %in% "D0",]
D0_samples <- as.character(D0_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D0_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D0 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######
#DAY1
#####
D1_samples <- QS[QS$Day %in% "D1",]
D1_samples <- as.character(D1_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D1_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D1 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######
#DAY2
######
D2_samples <- QS[QS$Day %in% "D2",]
D2_samples <- as.character(D2_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D2_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D2 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######
#DAY4
######
D4_samples <- QS[QS$Day %in% "D4",]
D4_samples <- as.character(D4_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D4_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D4 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######
#DAY9
######
D9_samples <- QS[QS$Day %in% "D9",]
D9_samples <- as.character(D9_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D9_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D9 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######
#DAY11
######
D11_samples <- QS[QS$Day %in% "D11",]
D11_samples <- as.character(D11_samples$SampleID)
umap.expr <- expr.data[,colnames(expr.data) %in% D11_samples]
umap.expr <- as.matrix(t(umap.expr))
common.umap = umap(umap.expr, random_state=123)
common.umap$layout
UMAP_coordinates <- data.frame(common.umap$layout)
colnames(UMAP_coordinates) <- c("UMAP1","UMAP2")
UMAP_coordinates$Sample <- rownames(UMAP_coordinates)
UMAP_coordinates_D11 <- merge(UMAP_coordinates, QS,
by.x = "Sample", by.y = "SampleID")
######Plot combined UMAP coordinates:
UMAP_coordinates <- rbind(UMAP_coordinates_D0, UMAP_coordinates_D1, UMAP_coordinates_D2,UMAP_coordinates_D4, UMAP_coordinates_D9, UMAP_coordinates_D11)
UMAP_coordinates$Day <- factor(UMAP_coordinates$Day, levels = c("D0","D1","D2","D4","D9","D11"))
setwd("~/Documents/GitHub/CancerDormancy/Prognosis_and_treatment_response_analysis/Figures")
pdf("GSE134839_UMAP_35GeneRefinedPanel.pdf", height = 3, width = 9)
ggplot(UMAP_coordinates, aes(x=UMAP1, y=UMAP2, colour = Common_score)) +
geom_point() +
scale_color_gradient2(low = "#59ac53", midpoint = 0,mid = "grey95", high = "#8b5aa8") + theme_classic() + facet_wrap(~Day,nrow = 1)
dev.off()
#################################################
#Percentage of quiescent cells at each timepoint
#################################################
QS$CellStatus <- sapply(QS$Common_score, function(x)
ifelse(x < 0, "Proliferating","Quiescent"))
table(QS$Day)
Days <- c(0,0,1,1,2,2,4,4,9,9,11,11)
CellStatus <- c("Proliferating","Quiescent","Proliferating","Quiescent","Proliferating","Quiescent","Proliferating","Quiescent","Proliferating","Quiescent","Proliferating","Quiescent")
N <- NULL
for (i in c("D0","D1","D2","D4","D9","D11")) {
print(i)
test <- QS[QS$Day %in% i,]
test <- table(test$CellStatus)
n <- test[1]
N <- c(N,n)
n <- test[2]
N <- c(N,n)
}
Summary <- data.frame(Days, CellStatus, N)
Summary$Days <- factor(Summary$Days, levels = c(0,1,2,4,9,11))
pdf("GSE134839_barplot_cell_composition_35GeneRefinedPanel.pdf", height = 5, width = 4)
p <- ggplot(Summary, aes(fill=CellStatus, y=N, x=Days, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_fill_manual(values = c("#666666", "#D95F02"))
dev.off()
#Load required R packages:
library(biomaRt)
library(plyr)
library(GeoTcgaData)
library(data.table)
library(sva)
library(class)
library(ggplot2)
library(ggpubr)
############
#Load single cell data
setwd("~/Documents/Dormancy_PhD_project_data/scRNA_seq_treatment_response_data/GSE149383/GSE134839_RAW")
load("ComBat_filter_quiescent_and_proliferating_cells.RData")
#Select reference cells and cells from day 0 of the experiment
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D0",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",1572))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D0 <- pca.coordinates
##Select reference cells and cells from day 0 of the experiment
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D1",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",309))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D1 <- pca.coordinates
##Select reference cells and cells from day 2 of the experiment
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D2",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",226))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D2 <- pca.coordinates
##Select reference cells and cells from day 4 of the experiment:
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D4",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",200))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D4 <- pca.coordinates
##Select reference cells and cells from day 9 of the experiment
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D9",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",389))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D9 <- pca.coordinates
##Select reference cells and cells from day 11 of the experiment
Samples <- colnames(combat_filter)
Selected_cells <- Samples[1:27]
Samples <- data.frame(Samples)
Samples$Day <- sapply(Samples$Samples, function(x)
strsplit(x,"_")[[1]][1])
Samples <- Samples[Samples$Day %in% "D11",]
Samples <- as.character(Samples$Samples)
Selected_cells <- c(Selected_cells, Samples)
combat_filter_test <- combat_filter[,colnames(combat_filter) %in% Selected_cells]
irlba_res <- prcomp(t(combat_filter_test[,-1]))
pca.coordinates <- irlba_res$x
rownames(pca.coordinates)
##Add annotation about quiescence type:
QuiescenceType <- c("spontaneous","spontaneous","control","spontaneous","spontaneous","control","control","spontaneous",
"control","control","spontaneous","spontaneous","spontaneous","spontaneous","spontaneous",
"control","control","control","control","control","control","control","serum","serum",
"mek","mek","cdk","cdk","contact","contact","control","control","serum","serum","mek","mek",
"cdk","cdk","contact","contact")
QuiescenceType <- QuiescenceType[!(QuiescenceType %in% "control")]
dim(pca.coordinates)
QuiescenceType <- c(QuiescenceType, rep("single cell",253))
pca.coordinates <- data.frame(pca.coordinates)
pca.coordinates$QuiescenceType <- QuiescenceType
pca.coordinates_D11 <- pca.coordinates
##########################################################################
###Add quiescence score annotation:
setwd("~/Documents/GitHub/CancerDormancy/Prognosis_and_treatment_response_analysis/Results/")
load("GSE134839_QuiescenceScores_35GeneRefinedPanel.RData")
#Select quiescent cells:
QS <- QS[QS$Common_score > 0,]
quiescent_cells <- as.character(QS$SampleID)
#D0
pca.coordinates_D0 <- pca.coordinates_D0[,colnames(pca.coordinates_D0) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D0[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D0)
pca_test <- pca.coordinates_D0[27:1598,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D0 <- pca_test
results_D0$QuiescenceType <- pr
results_D0$QuiescenceType <- as.character(results_D0$QuiescenceType)
table(results_D0$QuiescenceType)
results_D0$QuiescenceType <- sapply(results_D0$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D0 <- rbind(pca_train, results_D0, pca.proliferating)
table(results_D0$QuiescenceType)
#D1
pca.coordinates_D1 <- pca.coordinates_D1[,colnames(pca.coordinates_D1) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D1[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D1)
pca_test <- pca.coordinates_D1[27:335,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D1 <- pca_test
results_D1$QuiescenceType <- pr
results_D1$QuiescenceType <- as.character(results_D1$QuiescenceType)
table(results_D1$QuiescenceType)
results_D1$QuiescenceType <- sapply(results_D1$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D1 <- rbind(pca_train, results_D1, pca.proliferating)
table(results_D1$QuiescenceType)
#D2
pca.coordinates_D2 <- pca.coordinates_D2[,colnames(pca.coordinates_D2) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D2[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D2)
pca_test <- pca.coordinates_D2[27:252,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D2 <- pca_test
results_D2$QuiescenceType <- pr
results_D2$QuiescenceType <- as.character(results_D2$QuiescenceType)
table(results_D2$QuiescenceType)
results_D2$QuiescenceType <- sapply(results_D2$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D2 <- rbind(pca_train, results_D2, pca.proliferating)
table(results_D2$QuiescenceType)
#D4
pca.coordinates_D4 <- pca.coordinates_D4[,colnames(pca.coordinates_D4) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D4[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D4)
pca_test <- pca.coordinates_D4[27:226,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D4 <- pca_test
results_D4$QuiescenceType <- pr
results_D4$QuiescenceType <- as.character(results_D4$QuiescenceType)
table(results_D4$QuiescenceType)
results_D4$QuiescenceType <- sapply(results_D4$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D4 <- rbind(pca_train, results_D4, pca.proliferating)
table(results_D4$QuiescenceType)
#D9
pca.coordinates_D9 <- pca.coordinates_D9[,colnames(pca.coordinates_D9) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D9[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D9)
pca_test <- pca.coordinates_D9[27:415,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D9 <- pca_test
results_D9$QuiescenceType <- pr
results_D9$QuiescenceType <- as.character(results_D9$QuiescenceType)
table(results_D9$QuiescenceType)
results_D9$QuiescenceType <- sapply(results_D9$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D9 <- rbind(pca_train, results_D9, pca.proliferating)
table(results_D9$QuiescenceType)
#D11
pca.coordinates_D11 <- pca.coordinates_D11[,colnames(pca.coordinates_D11) %in% c("QuiescenceType","PC1","PC2")]
pca_train <- pca.coordinates_D11[1:26,]
pca_train_category <- pca_train$QuiescenceType
pca_train$QuiescenceType <- NULL
dim(pca.coordinates_D11)
pca_test <- pca.coordinates_D11[27:279,]
pca.proliferating <- pca_test[!rownames(pca_test) %in% quiescent_cells,]
pca.proliferating$QuiescenceType <- "Proliferating"
pca_test <- pca_test[rownames(pca_test) %in% quiescent_cells,]
pca_test$QuiescenceType <- NULL
pr <- knn(pca_train,pca_test,cl=pca_train_category,k=3, l = 2)
results_D11 <- pca_test
results_D11$QuiescenceType <- pr
results_D11$QuiescenceType <- as.character(results_D11$QuiescenceType)
table(results_D11$QuiescenceType)
results_D11$QuiescenceType <- sapply(results_D11$QuiescenceType, function(x)
ifelse(x %in% "spontaneous","spontaneous",
ifelse(x %in% "serum","serum",
ifelse(x %in% "contact","contact",
ifelse(x %in% "cdk","cdk",
ifelse(x %in% "mek","mek","uncertain"))))))
pca_train$QuiescenceType <- pca_train_category
results_D11 <- rbind(pca_train, results_D11, pca.proliferating)
table(results_D11$QuiescenceType)
#########################
#Combine and plot results
########################
#Combine results
results_D0$Day <- "D0"
results_D0$Sample <- rownames(results_D0)
results_D1$Day <- "D1"
results_D1$Sample <- rownames(results_D1)
results_D2$Day <- "D2"
results_D2$Sample <- rownames(results_D2)
results_D4$Day <- "D4"
results_D4$Sample <- rownames(results_D4)
results_D9$Day <- "D9"
results_D9$Sample <- rownames(results_D9)
results_D11$Day <- "D11"
results_D11$Sample <- rownames(results_D11)
results <- rbind(results_D0, results_D1, results_D11, results_D2, results_D4, results_D9)
results$Day <- factor(results$Day, levels = c("D0","D1","D2","D4","D9","D11"))
reference <- results$Sample[1:26]
results$SampleType <- sapply(results$Sample, function(x)
ifelse(x %in% reference, "RNA-seq reference","scRNA-seq"))
results$SampleType <- factor(results$SampleType, levels = c("scRNA-seq","RNA-seq reference"))
#Plot
setwd("~/Documents/GitHub/CancerDormancy/QuiescenceTypeClassification/scRNAseq_classification/Figures/")
plot <- ggplot(results, aes(x= PC1, y=PC2, color = QuiescenceType, shape = SampleType)) + geom_point(aes(shape=SampleType, color=QuiescenceType), alpha = 0.7, size =1)
pdf("GSE134839_knn_35GeneRefinedPanel.pdf", width = 9, height = 3)
plot + scale_colour_manual(values = c("cdk" = "firebrick3", "contact" = "royalblue4", "mek" = "lightskyblue", "serum" = "goldenrod1", "spontaneous" = "mediumorchid4","uncertain" = "grey81", "Proliferating" = "mediumseagreen")) + facet_wrap(~Day,nrow = 1) + theme_classic() + scale_size_manual(values=c(1, 1))
dev.off()
##############################
##Barplot composition summary:
#############################
QuiescenceType <- c("cdk","contact","mek","serum","spontaneous","uncertain","cdk","contact","mek","serum","spontaneous","uncertain","cdk","contact","mek","serum","spontaneous","uncertain","cdk","contact","mek","serum","spontaneous","uncertain","cdk","contact","mek","serum","spontaneous","uncertain","cdk","contact","mek","serum","spontaneous","uncertain")
Days <- c(rep(0,6),rep(1,6),rep(2,6),rep(4,6),rep(9,6),rep(11,6))
N <- c(55,5,304,12,131,119,6,9,78,138,23,41,13,3,55,64,25,21,5,1,76,52,13,18,14,6,78,64,12,59,9,3,63,4,7,18)
Summary <- data.frame(Days, QuiescenceType, N)
Summary$Days <- as.factor(Summary$Days)
test <- results[results$Day %in% "D0",]
results_D0 <- results_D0[!(results_D0$Sample %in% reference),]
table(results_D0$QuiescenceType)
results_D1 <- results_D1[!(results_D1$Sample %in% reference),]
table(results_D1$QuiescenceType)
results_D2 <- results_D2[!(results_D2$Sample %in% reference),]
table(results_D2$QuiescenceType)
results_D4 <- results_D4[!(results_D4$Sample %in% reference),]
table(results_D4$QuiescenceType)
results_D9 <- results_D9[!(results_D9$Sample %in% reference),]
table(results_D9$QuiescenceType)
results_D11 <- results_D11[!(results_D11$Sample %in% reference),]
table(results_D11$QuiescenceType)
pdf("GSE134839_knn_barplot_cell_composition_35GeneRefinedPanel.pdf", height = 5, width = 4)
p <- ggplot(Summary, aes(fill=QuiescenceType, y=N, x=Days, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_colour_manual(values = c("cdk" = "firebrick3", "contact" = "royalblue4", "mek" = "lightskyblue", "serum" = "goldenrod1", "spontaneous" = "mediumorchid4","uncertain" = "grey81"))
dev.off()
